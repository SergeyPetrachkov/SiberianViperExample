//
//  CustomSplashViewController.swift
//  SiberianViperExample
//
//  Created by Sergey Petrachkov on 05/05/2018.
//  Copyright (c) 2018 West Coast IT. All rights reserved.
//
//  This file was generated by the SergeyPetrachkov VIPER Xcode Templates so
//  you can apply VIPER architecture to your iOS projects
//

import UIKit

class CustomSplashViewController: UIViewController {
  
  // MARK: - Essentials
  var presenter: CustomSplashPresenterInput?

  // MARK: Initializers
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
  }
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
  }
  
  // MARK: - Setup
  fileprivate func setup() {
    // execute once only
    guard self.presenter == nil else {
      return
    }
    let presenter = self.injectPresenter()
    presenter.output = self
    presenter.view = self
    self.presenter = presenter
  }
  fileprivate func injectPresenter() -> CustomSplashPresenterInput  {
    let presenter = CustomSplashPresenter()
    let interactor = CustomSplashInteractor()
    interactor.output = presenter
    presenter.interactor = interactor
    let router = CustomSplashRouter()
    presenter.router = router
    return presenter
  }
  // MARK: - Lifecycle
  override func viewDidLoad() {
    super.viewDidLoad()
    self.setup()
  }
  override func viewDidAppear(_ animated: Bool) {
    super.viewDidAppear(animated)
    self.presenter?.start()
  }
  // MARK: - Actions
}
extension CustomSplashViewController: CustomSplashPresenterOutput {
  func didChangeState(viewModel: CustomSplash.DataContext.ViewModel) {
    
  }
}
