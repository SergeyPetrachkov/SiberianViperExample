//
//
//  FeedInteractor.swift
//  SiberianViperExample
//
//  Created by Sergey Petrachkov on 05/05/2018.
//  Copyright (c) 2018 West Coast IT. All rights reserved.
//
//  This file was generated by the SergeyPetrachkov VIPER Xcode Templates so
//  you can apply VIPER architecture to your iOS projects
//

import UIKit

protocol FeedInteractorInput: class {
  init(service: FeedServiceProtocol)
  var output: FeedInteractorOutput? { get set }
  func requestItems(request: Feed.DataContext.Request)
}

protocol FeedInteractorOutput: class {
  func didReceive(response: Feed.DataContext.Response)
  func didFail(with error: Error)
}

class FeedInteractor: FeedInteractorInput {
  let service: FeedServiceProtocol!
  // let mapper: FeedMapperProtocol!
  required init(service: FeedServiceProtocol) {
    self.service = service
  }

  weak var output: FeedInteractorOutput?
  // MARK: - Input
  func requestItems(request: Feed.DataContext.Request) {
    self.service.getItems(request: request,
                          success: { items in
                            // let models = items.map({ ListItemModel(currentModel: $0) })
                            // self.output?.didReceive(response: Feed.DataContext.Response(originalRequest: request,
                            //                                                             items: models))
    },
                          failure: { error in
                            self.output?.didFail(with: error)
    })
  }
}
